/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.closet.view;

import com.closet.config.DBConfig;
import com.closet.model.ImageBean;
import com.closet.util.FileUtil;
import com.closet.util.gui.GUITools;
import com.closet.util.gui.MyDialog;
import java.awt.BorderLayout;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.filechooser.FileFilter;

/**
 *
 * @author 黑客
 */
public class ModePanelItem extends javax.swing.JPanel {
    
    ImageBean image;

    /**
     * Creates new form ModePanelItem
     */
    public ModePanelItem(ImageBean image) {
        initComponents();
        this.image = image;
        try {
            Icon icon = new ImageIcon(ImageIO.read(this.getClass().getResourceAsStream("/to.png")));
            to.setIcon(icon);
            
            fromPanel.add(GUITools.addPreviewPanel(DBConfig.imageLocation + "/" + image.fileName, 150),BorderLayout.CENTER);
            JPanel panel = GUITools.addPreviewPanel(DBConfig.imageLocation + "/" + image.afterDeal, 150);
            if(panel != null){
                toPanel.add(panel, BorderLayout.CENTER);
                toPanel.setBorder(null);
                toPanel.setToolTipText("点击更换模型");
            }else{
                Icon addIcon = new ImageIcon(ImageIO.read(this.getClass().getResourceAsStream("/add.png")));
                JLabel add = new JLabel(addIcon);
                add.setToolTipText("点击添加模型文件");
                add.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                add.addMouseListener(new MouseAdapter() {
                    @Override
                    public void mouseClicked(MouseEvent e) { 
                        if(e.getButton()==MouseEvent.BUTTON1 && e.getClickCount()==1){
                            addModelToImage();
                        }
                    }
                });
                toPanel.add(add);
            }
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }
    
    private void addModelToImage() {
        FileFilter[] filteres = new FileFilter[]{GUITools.getFileFilter()[0]};
        File selectFile = GUITools.showOpenDialog(this, filteres, false, "选择模型文件", JFileChooser.FILES_ONLY);
        if(selectFile != null){
            image.afterDeal = System.currentTimeMillis()+"-"+selectFile.getName();
            image.update("afterdeal", image.afterDeal);
            FileUtil.copy(selectFile, new File(DBConfig.imageLocation, image.afterDeal));
            JPanel panel = GUITools.addPreviewPanel(selectFile.getPath(), 150);
            toPanel.removeAll();
            toPanel.add(panel, BorderLayout.CENTER);
            toPanel.setBorder(null);
            toPanel.setToolTipText("点击更换模型");
            toPanel.validate();
            toPanel.repaint();
            new MyDialog(null, "更换成功");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fromPanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        to = new javax.swing.JLabel();
        toPanel = new javax.swing.JPanel();

        setMaximumSize(new java.awt.Dimension(32767, 150));
        setMinimumSize(new java.awt.Dimension(20, 150));
        setPreferredSize(new java.awt.Dimension(395, 150));
        setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        fromPanel.setMaximumSize(new java.awt.Dimension(150, 150));
        fromPanel.setMinimumSize(new java.awt.Dimension(150, 150));
        fromPanel.setPreferredSize(new java.awt.Dimension(150, 150));
        fromPanel.setLayout(new java.awt.BorderLayout());
        add(fromPanel);

        jPanel2.setLayout(new java.awt.BorderLayout());
        jPanel2.add(to, java.awt.BorderLayout.CENTER);

        add(jPanel2);

        toPanel.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 75, 78)));
        toPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        toPanel.setMaximumSize(new java.awt.Dimension(150, 150));
        toPanel.setMinimumSize(new java.awt.Dimension(150, 150));
        toPanel.setPreferredSize(new java.awt.Dimension(150, 150));
        toPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                toPanelMouseClicked(evt);
            }
        });
        toPanel.setLayout(new java.awt.BorderLayout());
        add(toPanel);
    }// </editor-fold>//GEN-END:initComponents

    private void toPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_toPanelMouseClicked
        if(evt.getButton()==MouseEvent.BUTTON1 && evt.getClickCount()==1){
            addModelToImage();
        }
    }//GEN-LAST:event_toPanelMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel fromPanel;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel to;
    private javax.swing.JPanel toPanel;
    // End of variables declaration//GEN-END:variables

}
